##
##  ██▓      █████▒██▀███   ▄████▄  
## ▓██▒    ▓██   ▒▓██ ▒ ██▒▒██▀ ▀█  
## ▒██░    ▒████ ░▓██ ░▄█ ▒▒▓█    ▄ 
## ▒██░    ░▓█▒  ░▒██▀▀█▄  ▒▓▓▄ ▄██▒
## ░██████▒░▒█░   ░██▓ ▒██▒▒ ▓███▀ ░
## ░ ▒░▓  ░ ▒ ░   ░ ▒▓ ░▒▓░░ ░▒ ▒  ░
## ░ ░ ▒  ░ ░       ░▒ ░ ▒░  ░  ▒   
##   ░ ░    ░ ░     ░░   ░ ░        
##     ░  ░          ░     ░ ░      
##                         ░        

# Basic Settings
set preview true
set hidden true
set drawbox true
set icons true
set ignorecase true
set ratios 2:3
#set previewer ~/.config/lf/previewer

# Custom Functions
cmd open ${{
    case $(file --mime-type "$f" -bL) in
        text/*|application/json) $EDITOR "$f";;
        *) setsid -f xdg-open "$f" >/dev/null 2>&1;;
    esac
}}

# Jump to dir
cmd fzf_jump ${{
    res="$(find . -maxdepth 1 | fzf --reverse --header='Jump to location' | sed 's/\\/\\\\/g;s/"/\\"/g')"
    if [ -d "$res" ] ; then
        cmd="cd"
    elif [ -f "$res" ] ; then
        cmd="select"
    else
        exit 0
    fi
    lf -remote "send $id $cmd \"$res\""
}}
map <c-f> :fzf_jump

# Change window title
cmd on-cd &{{
    # '&' commands run silently in background (which is what we want here),
    # but are not connected to stdout.
    # To make sure our escape sequence still reaches stdout we pipe it to /dev/tty
    printf "\033]0; lf:$(pwd | sed "s|$HOME|~|")\007" > /dev/tty
}}

# Archive bindings
cmd extract ${{
  case "$f" in
      *.zip) unzip "$f" >/dev/null ;;
      *.tar.gz) tar -xzvf "$f" >/dev/null ;;
      *.tar.bz2) tar -xjvf "$f" >/dev/null ;;
      *.tar.xz) tar -xvf "$f" >/dev/null ;;
      *.tar) tar -xvf "$f" >/dev/null ;;
      *) echo "Unsupported format" ;;
  esac
}}

cmd zip %zip -r "$f" "$f"
cmd tar %tar cvf "$f.tar" "$f"
cmd targz %tar cvzf "$f.tar.gz" "$f"
cmd tarbz2 %tar cjvf "$f.tar.bz2" "$f"

# also run at startup
on-cd

# Bindings
# Remove some defaults
map m
map o
map n
map "'"
map '"'
map d
map c
map e
map f

# bat as pager
map i $~/.config/lf/preview $f | less -R

# File Openers
map ee $$EDITOR "$f"

# Archive Mappings
map az zip
map at tar
map ag targz
map ab tarbz2
map au extract

# Basic Functions
map . set hidden!
map DD delete
map p paste
map x cut
map y copy
map <enter> open
map mf mkfile
map mkd mkdir
map ms $mkscript
map r rename
map H top
map L bottom
map R reload
map C clear
map U unselect

